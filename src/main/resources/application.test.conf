akka {
  routing {
    verbose-error-messages = on
  },
  loglevel: "ERROR",
  stdout-loglevel = "ERROR"
}

kamon.prometheus.buckets {
    default-buckets = [
      10,
      30,
      100,
      300,
      1000,
      3000,
      10000,
      30000,
      100000
    ]

    time-buckets = [
      0.005,
      0.01,
      0.025,
      0.05,
      0.075,
      0.1,
      0.25,
      0.5,
      0.75,
      1,
      2.5,
      5,
      7.5,
      10
    ]

    information-buckets = [
      512,
      1024,
      2048,
      4096,
      16384,
      65536,
      524288,
      1048576
    ]
  }

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.propagation.http.default.tags {
  mappings {
    requestID = "X-Request-ID"
  }
}

kamon.context.codecs {

  # If the application must read any of these keys it is necessary to create a
  # broadcast string key with a matching name and read the value from the context:
  #
  # val requestIDKey = Key.broadcastString("request-id") // Do this only once, keep a reference.
  # val requestID = Kamon.currentContext().get(requestIDKey)
  #
  string-keys {
  #    testID = "testID"
  }
}


fluent {

  http {
    host = "0.0.0.0"
    port = 9002
  }

  databases {
    mysql {
      url = "jdbc:mysql://127.0.0.1:3306/fluent?characterEncoding=utf8&rewriteBatchedStatements=true"
      user = "root"
      password = "123456"
      driver = "com.mysql.jdbc.Driver"
    }

  }
}

